name: Build

on:
 push:
  paths:
  - '.github/workflows/Build.yml'
  - 'sfall/**'

jobs:
 Build:
  name:    ${{ matrix.cfg.toolset }}-${{ matrix.cfg.configuration }}
  runs-on: windows-latest
  strategy:
   fail-fast: false
   matrix:
    cfg:
    - { toolset: v140_xp, configuration: ReleaseXP, allow-priv: nope, allow-fail: nope }
    - { toolset: v140_xp, configuration: DevXP,     allow-priv: nope, allow-fail: true }
    - { toolset: v142,    configuration: ReleaseXP, allow-priv: true, allow-fail: nope }
    - { toolset: v142,    configuration: DevXP,     allow-priv: nope, allow-fail: true }
  steps:

  - name:  Config
    run:   |
           :
           echo ::set-env name=DXSDK_DIR::$HOME/cache/
           if   [ "${{ github.event.repository.private }}" != "true" ]; then
                echo ::set-env name=GHA_RUN::true
           elif [ "${{ github.event.repository.private }}" == 'true' ] && [ "${{ matrix.cfg.allow-priv }}" == "true" ]; then
                echo ::set-env name=GHA_RUN::true
           fi
    shell: bash

  - name: Clone
    if:   env.GHA_RUN == 'true'
    uses: actions/checkout@v2

  - name: Cache
    if:   env.GHA_RUN == 'true' && github.event_name == 'push'
    id:   cache
    uses: actions/cache@v1
    with:
     path: ~/cache
     key:  cache

  - name:  Cache create
    if:    env.GHA_RUN == 'true' && steps.cache.outputs.cache-hit != 'true'
    run:   |
           :
           echo ::group::DX2010
           curl -L https://download.microsoft.com/download/a/e/7/ae743f1f-632b-4809-87a9-aa1bb3458e31/DXSDK_Jun10.exe -o _DX2010_.exe
           7z x _DX2010_.exe DXSDK/Include -o_DX2010_
           7z x _DX2010_.exe DXSDK/Lib/x86 -o_DX2010_
           mv _DX2010_/DXSDK $HOME/cache
           echo ::endgroup::

           echo ::group::DX2007
           curl -L https://download.microsoft.com/download/3/3/f/33f1af6e-c61b-4f14-a0de-3e9096ed4b3a/DXSDK_Aug2007.exe -o _DX2007_.exe
           7z x _DX2007_.exe -o_DX2007_
           7z x _DX2007_/DXSDK_Aug2007.exe Lib/x86 -o_DX2007_
           mv _DX2007_/Lib/x86/dinput.lib $HOME/cache/Lib/x86
           echo ::endgroup::

           echo ::group::vswhere
           curl -L https://github.com/microsoft/vswhere/releases/latest/download/vswhere.exe -o $HOME/cache/vswhere.exe
           echo ::endgroup::

           # clean & check
           rm -fR _DX*_ _DX*_.exe
           git status

           #ls -Ra $HOME/cache
           du -hd0 $HOME/cache
    shell: bash

  # "Temporary" workaround until https://github.com/actions/virtual-environments/pull/289 is merged
  # Takes awful amount of time :(
  - name:  Install Microsoft.VisualStudio.Component.WinXP
    if:    env.GHA_RUN == 'true' && matrix.cfg.toolset == 'v140_xp'
    run:   |
           "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installer.exe" modify --channelId VisualStudio.16.Release --productId Microsoft.VisualStudio.Product.Enterprise -q --add Microsoft.VisualStudio.Component.WinXP
    shell: cmd

  - name:  Build
    if:    env.GHA_RUN == 'true'
    run:   |
           :
           echo "@echo off" > sfall/PostBuild.cmd

           # "You're dead", he said. Keli waited. She couldn't think of any suitable reply.
           # "I'm not" lacked a certain style, while "Is it serious?" seemed somehow too frivolous.
           sed -ri 's!0x[0]*501!0x600!' sfall/stdafx.h

           # "Temporary" workaround until VS2017 is (re)added to GHA
           if [ "${{ matrix.cfg.toolset }}" == "v142" ]; then
              sed -ri 's!<EnableEnhancedInstructionSet>NoExtensions</EnableEnhancedInstructionSet>!<EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>!' sfall/ddraw.vcxproj
           fi

           if [ "${{ matrix.cfg.allow-fail }}" == "true" ]; then
              # (Try to) build solution as intended, but prevent it from failing the job

              ok=1
              "$($HOME/cache/vswhere.exe -latest -requires Microsoft.Component.MSBuild -find MSBuild/**/Bin/MSBuild.exe)" sfall/ddraw.sln -p:Configuration=${{ matrix.cfg.configuration }} -p:Platform=Win32 -p:PlatformToolset=${{ matrix.cfg.toolset }}|| ok=0

              if [ $ok -eq 1 ]; then
                 echo ::set-env name=GHA_BUILD::OK
              fi
           else
              "$($HOME/cache/vswhere.exe -latest -requires Microsoft.Component.MSBuild -find MSBuild/**/Bin/MSBuild.exe)" sfall/ddraw.sln -p:Configuration=${{ matrix.cfg.configuration }} -p:Platform=Win32 -p:PlatformToolset=${{ matrix.cfg.toolset }}
              echo ::set-env name=GHA_BUILD::OK
           fi
    shell: bash

  - name:  Build check
    if:    env.GHA_RUN == 'true' && env.GHA_BUILD == 'OK'
    run:   |
           :
           ddraw="sfall/${{ matrix.cfg.configuration }}/ddraw"
           file $ddraw.dll
           ldd  $ddraw.dll

           mkdir -p ddraw
           cp $ddraw.dll ddraw/ddraw.dll
           mv $ddraw.dll ddraw/ddraw.rotators.dll
    shell: bash

  - uses: actions/upload-artifact@v1
    if:   env.GHA_RUN == 'true' && env.GHA_BUILD == 'OK'
    with:
     name: ddraw-${{ matrix.cfg.toolset }}-${{ matrix.cfg.configuration }}
     path: ddraw

 Repack:
  needs:   Build
  runs-on: ubuntu-latest
  steps:

  - name: Clone
    uses: actions/checkout@v2

  - name: /
    run:  |
          :
          mkdir -p ddraw
          mv artifacts/ddraw.ini ddraw
          mv artifacts/ddraw.rotators.ini ddraw
          mv sfall/UI ddraw

  - name:  v140_xp/ReleaseXP/
    uses:  actions/download-artifact@v1
    with:
     name: ddraw-v140_xp-ReleaseXP
     path: ddraw/v140_xp/ReleaseXP
    continue-on-error: true

  - name:  v140_xp/DevXP/
    uses:  actions/download-artifact@v1
    with:
     name: ddraw-v140_xp-DevXP
     path: ddraw/v140_xp/DevXP
    continue-on-error: true

  - name:  v142/ReleaseXP/
    uses:  actions/download-artifact@v1
    with:
     name: ddraw-v142-ReleaseXP
     path: ddraw/v142/ReleaseXP
    continue-on-error: true

  - name:  v142/DevXP/
    uses:  actions/download-artifact@v1
    with:
     name: ddraw-v142-DevXP
     path: ddraw/v142/DevXP
    continue-on-error: true

  - uses: actions/upload-artifact@v1
    with:
     name: ddraw
     path: ddraw
